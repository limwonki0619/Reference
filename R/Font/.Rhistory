knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
iris %>%
ggplot(aes(x=Sepal.Length, y=Petal.Length, color=Species)) +
geom_point() +
theme_bw(base_family = "나눔바른고딕", base_size = 10) +
theme(legend.position = "top") +
labs(title="붓꽃 데이터 한글 글꼴 적용", color="붓꽃 종류") +
theme(plot.title = element_text(family = "jalnan", face = "bold", hjust = 0.5, size = 15, color = "grey20"))
install.packages("dplyr")
library(dplyr)
install.packages("ggplot2")
library(ggplot2)
iris %>%
ggplot(aes(x=Sepal.Length, y=Petal.Length, color=Species)) +
geom_point() +
theme_bw(base_family = "나눔바른고딕", base_size = 10) +
theme(legend.position = "top") +
labs(title="붓꽃 데이터 한글 글꼴 적용", color="붓꽃 종류") +
theme(plot.title = element_text(family = "jalnan", face = "bold", hjust = 0.5, size = 15, color = "grey20"))
library(MASS)
### **ggplot2 그래프 커스텀 하기**
library(ggplot2)
data("Cars93")   # MASS 패키지에서 Cars93 데이터를 가져옵니다.
Basic_Plot <- ggplot(Cars93, aes(x=Price, y=Horsepower)) +   # x축: 차량 가격, y축: 마력, Basic_Plot 변수 안에 그래프 정보를 저장합니다.
geom_jitter(aes(colour=DriveTrain))    # jitter plot을 그립니다. 색상: 차량 구동계
Basic_Plot <- ggplot(Cars93, aes(x=Price, y=Horsepower)) +   # x축: 차량 가격, y축: 마력, Basic_Plot 변수 안에 그래프 정보를 저장합니다.
geom_jitter(aes(colour=DriveTrain))    # jitter plot을 그립니다. 색상: 차량 구동계
Basic_Plot
ggplot(Cars93, aes(x=Price, y=Horsepower)) +   # x축: 차량 가격, y축: 마력
geom_point(aes(colour=DriveTrain))    # jitter plot을 그립니다. 색상: 차량 구동계
Basic_Plot <- ggplot(Cars93, aes(x=Price, y=Horsepower)) +   # x축: 차량 가격, y축: 마력
geom_point(aes(colour=DriveTrain))    # jitter plot을 그립니다. 색상: 차량 구동계
Basic_Plot
library(ggplot2)
library(MASS)    # dplyr 패키지에 포함되어 있음
data("Cars93")   # MASS 패키지에서 Cars93 데이터를 가져옵니다.
Basic_Plot <- ggplot(Cars93, aes(x=Price, y=Horsepower)) +   # x축: 차량 가격, y축: 마력
geom_point(aes(colour=DriveTrain))    # jitter plot을 그립니다. 색상: 차량 구동계
knitr::opts_chunk$set(echo = TRUE)
